server:
  port:
    8083

#spring:
#  application:
#    name: order
#  datasource:
#    username: amigoscode
#    url: jdbc:postgresql://localhost:5432/order
#    password: password
#  jpa:
#    hibernate:
#      ddl-auto: create-drop
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#        format_sql: true
#    show-sql: true

spring:
  application:
    name: order
  datasource:
    password: 'root'
    url: jdbc:mysql://localhost:3306/order
    username: root
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        format_sql: true
    show-sql: true
  zipkin:
    base-url: http://localhost:9411

spring.kafka:
  bootstrap-servers: localhost:9092
  producer:
    key-serializer: org.apache.kafka.common.serialization.LongSerializer
    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  streams:
    properties:
      default.key.serde: org.apache.kafka.common.serialization.Serdes$LongSerde
      default.value.serde: org.springframework.kafka.support.serializer.JsonSerde

spring.kafka.topic.name: order-topic
spring.kafka.topic.payment-order: payment-topic
spring.kafka.topic.stock: stock-topic

spring.output.ansi.enabled: ALWAYS

logging.pattern.console:  "%clr(%d{HH:mm:ss.SSS}){blue} %clr(---){faint} %clr([%15.15t]){yellow} %clr(:){red} %clr(%m){faint}%n"